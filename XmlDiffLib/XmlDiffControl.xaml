<UserControl x:Class="XmlDiffLib.XmlDiffControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:XmlDiffLib"
             xmlns:model="clr-namespace:XmlDiffLib.Models"
             xmlns:behaviors="clr-namespace:XmlDiffLib.Behaviors"
             xmlns:converters="clr-namespace:XmlDiffLib.Converters"
             mc:Ignorable="d" 
             x:Name="xXmlDiffControl"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
        <converters:BoolReverseToVisConverter x:Key="BoolReverseToVisConverter"/>
        <converters:IsNullConverter x:Key="IsNullConverter"/>

        <Style x:Key="sTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

            

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid x:Name="xTreeViewItemGrid"
                              PreviewDragEnter="xTreeViewItemGrid_PreviewDragEnter"
                              PreviewDragLeave="xTreeViewItemGrid_PreviewDragLeave">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border x:Name="xInserLineBorder"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Visibility="Collapsed"
                                    BorderBrush="#FFE9C4FD"
                                    BorderThickness="1.5"/>

                            <!--축소/확장 토글버튼-->
                            <!--<ToggleButton x:Name="xBtnExpander"
                                              Grid.Row="1"
                                              Grid.Column="0"
                                              Width="25"
                                              Height="25"
                                              Background="Transparent"
                                              TextBlock.FontSize="18"
                                              TextBlock.FontWeight="ExtraBold"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press" />-->

                            <!--세로 라인-->
                            <Rectangle x:Name="xVerLn"
                                       Grid.Column="0"
                                       Grid.RowSpan="3"
                                       Width="1"
                                       Stroke="#FFDCDCDC"
                                       Margin="0,0,1,0"
                                       SnapsToDevicePixels="true"
                                       Fill="White"/>

                            <Border Name="xBd"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!--<Ellipse x:Name="xEllipse"
                                                 Grid.Column="0"
                                                 Width="80"
                                                 Height="80"
                                                 Stroke="#FF000000"
                                                 StrokeThickness="2"/>-->
                                    <ContentPresenter x:Name="PART_Header"
                                                      Grid.Column="0"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>

                            <ItemsPresenter x:Name="ItemsHost"
                                            Grid.Row="2"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Margin="0, 0, 0, 10"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--마지막 노드는 표시 하지 않음-->
                            <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <!--마지막 노드에선 Ellipse Margin 설정, 직접 DataTemplate에서 데이터 위치 조절-->
                            <!--<DataTrigger Binding="{Binding Path=Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                                    <Setter TargetName="xEllipse" Property="Margin" Value="0, 0, 130, 0"/>
                                </DataTrigger>-->

                            <!--<Trigger Property="IsExpanded" Value="true">
                                    <Setter TargetName="xBtnExpander" Property="Content" Value="-" />
                                </Trigger>-->

                            <Trigger Property="IsExpanded"
                                     Value="False">
                                <Setter TargetName="ItemsHost"
                                        Property="Visibility"
                                        Value="Collapsed"/>
                                <!--<Setter TargetName="xBtnExpander" Property="Content" Value="+" />-->
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                                               Value="false"/>
                                    <Condition Property="Width"
                                               Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                        Property="MinWidth"
                                        Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                                               Value="false"/>
                                    <Condition Property="Height"
                                               Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                        Property="MinHeight"
                                        Value="19"/>
                            </MultiTrigger>
                            <!--노드 마우스로 드래그 도중 마우스 오버되는 노드를 강조하기 위해
                            보더 색상을 바꾸려는 의도 트리거인데 잘 안되서 주석처리-->
                            <!--<MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDraging,
                                                                 RelativeSource={RelativeSource FindAncestor,
                                                                 AncestorType={x:Type local:XmlDiffControl}}}"
                                               Value="True"/>
                                    <Condition Binding="{Binding IsMouseOver,
                                                                 RelativeSource={RelativeSource Self}}"
                                               Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="xBd"
                                        Property="BorderBrush"
                                        Value="#FFE9C4FD"/>
                                <Setter TargetName="xBd"
                                        Property="BorderThickness"
                                        Value="3"/>
                            </MultiDataTrigger>-->
                            <!--<MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDraging,
                                                         RelativeSource={RelativeSource FindAncestor,
                                                         AncestorType={x:Type local:XmlDiffControl}}}"
                                               Value="True"/>
                                    <Condition Property="behaviors:TreeViewItemMouseOverBehavior.IsMouseDirectlyOverItem"
                                               Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="xBd"
                                        Property="BorderBrush"
                                        Value="#FFE9C4FD"/>
                                <Setter TargetName="xBd"
                                        Property="BorderThickness"
                                        Value="3"/>
                            </MultiDataTrigger>-->
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter Property="Foreground"
                                        Value="Blue"/>
                                <Setter TargetName="xBd"
                                        Property="BorderBrush"
                                        Value="Blue"/>
                                <Setter TargetName="xBd"
                                        Property="BorderThickness"
                                        Value="2"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="true"/>
                                    <Condition Property="IsSelectionActive"
                                               Value="false"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter TargetName="xBd"
                                            Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type model:Group}" ItemsSource="{Binding Children}">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ParentGroup, Converter={StaticResource IsNullConverter}}"
                                         Value="False">
                                <Setter Property="Margin"
                                        Value="-30, 0, 0, 0"/>
                            </DataTrigger>
                            
                            <!--빈 노드-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding OnlyProcessDisplay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"
                                               Value="False"/>
                                    <Condition Binding="{Binding IsEmpty, Mode=TwoWay}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Hidden"/>
                            </MultiDataTrigger>

                            <!--프로세스만 보기-->
                            <DataTrigger Binding="{Binding OnlyProcessDisplay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"
                                         Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <!--없는 노드-->
                            <DataTrigger Binding="{Binding Without, Mode=TwoWay}" Value="True">
                                <Setter Property="Background" Value="{Binding WithoutColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </DataTrigger>
                            <!--중복-->
                            <DataTrigger Binding="{Binding IsDup, Mode=TwoWay}" Value="True">
                                <Setter Property="Background" Value="{Binding DupColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </DataTrigger>
                            <!--불일치-->
                            <DataTrigger Binding="{Binding IsDiff, Mode=TwoWay}" Value="True">
                                <Setter Property="Background" Value="{Binding DiffColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </DataTrigger>
                            <!--To에 더 추가된 노드-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <!--<Condition Binding="{Binding DiffType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"
                                               Value="to" />-->
                                    <Condition Binding="{Binding IsAdded}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding UncheckedColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--<Ellipse x:Name="xEllipse"
                         Width="80"
                         Height="80"
                         Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                         StrokeThickness="2"/>
                <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Name}"
                           FontWeight="Bold"/>-->

                <!--축소/확장 토글버튼-->
                <ToggleButton x:Name="xBtnExpander"
                              Grid.Column="0"
                              Width="20"
                              Height="20"
                              TextBlock.FontSize="13"
                              TextBlock.FontWeight="ExtraBold"
                              Focusable="True"
                              IsChecked="{Binding IsExpanded}"
                              ClickMode="Press"
                              Click="xBtnExpander_Click"
                              Margin="0, 0, 5, 0">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Content"
                                    Value="▶"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExpanded}"
                                             Value="True">
                                    <Setter Property="Content"
                                            Value="▼"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Ellipse x:Name="xEllipse"
                         Grid.Column="1"
                         Width="80"
                         Height="80"
                         Stroke="{Binding Color}"
                         StrokeThickness="2"/>
                <TextBlock Grid.Column="1"
                           Foreground="{Binding Color}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Name}"
                           FontWeight="Bold"/>
                <Rectangle Grid.Column="2"
                           Stroke="#FF000000"
                           Width="20"
                           Height="1"
                           StrokeThickness="1"
                           Margin="3, 0, 0, 0"/>
                <TextBlock Grid.Column="3"
                           Foreground="{Binding Color}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Id}"
                           FontWeight="Bold"
                           Margin="3, 0, 0, 0"/>
            </Grid>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type model:Process}" ItemsSource="{Binding Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <!--빈 노드-->
                            <DataTrigger Binding="{Binding IsEmpty, Mode=TwoWay}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            
                            <!--없는 노드-->
                            <DataTrigger Binding="{Binding Without, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Background" Value="{Binding WithoutColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </DataTrigger>
                            <!--중복-->
                            <DataTrigger Binding="{Binding IsDup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Background" Value="{Binding DupColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </DataTrigger>
                            <!--불일치-->
                            <DataTrigger Binding="{Binding IsDiff, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Background" Value="{Binding DiffColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </DataTrigger>
                            <!--To에 더 추가된 노드-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <!--<Condition Binding="{Binding DiffType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"
                                               Value="to" />-->
                                    <Condition Binding="{Binding IsAdded}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding UncheckedColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:XmlDiffControl}}}"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--<Ellipse x:Name="xEllipse"
                         Grid.Column="0"
                         Width="60"
                         Height="60"
                         Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                         StrokeThickness="2"/>
                <TextBlock Grid.Column="0"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Name}"
                           FontWeight="Bold"/>
                <Rectangle Grid.Column="1"
                           Stroke="#FF000000"
                           Width="20"
                           Height="1"
                           StrokeThickness="1"
                           Margin="3, 0, 0, 0"/>
                <TextBlock Grid.Column="2"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Type}"
                           FontWeight="Bold"
                           Margin="3, 0, 0, 0"/>-->

                <Ellipse x:Name="xEllipse"
                         Grid.Column="0"
                         Width="40"
                         Height="40"
                         Stroke="{Binding Color}"
                         StrokeThickness="2"/>
                <TextBlock Grid.Column="0"
                           Foreground="{Binding Color}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding TypeNum}"
                           FontWeight="Bold"/>
                <Rectangle Grid.Column="1"
                           Stroke="#FF000000"
                           Width="20"
                           Height="1"
                           StrokeThickness="1"
                           Margin="3, 0, 0, 0"/>
                <StackPanel Grid.Column="2"
                            Orientation="Horizontal"
                            Margin="3, 0, 0, 0">
                    <TextBlock Foreground="{Binding Color}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="{Binding Id}"
                               FontWeight="Bold"
                               Margin="3, 0, 0, 0"/>
                    <TextBlock Foreground="{Binding Color}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text=","
                               FontWeight="Bold"
                               Margin="0, 0, 0, 0"/>
                    <TextBlock Foreground="{Binding Color}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="{Binding Name}"
                               FontWeight="Bold"
                               Margin="3, 0, 0, 0"/>
                </StackPanel>
            </Grid>
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type model:Item}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Ellipse x:Name="xEllipse"
                         Grid.Column="0"
                         Width="40"
                         Height="40"
                         Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                         StrokeThickness="2"/>
                <TextBlock Grid.Column="0"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Name}"
                           FontWeight="Bold"/>
                <Rectangle Grid.Column="1"
                           Stroke="#FF000000"
                           Width="20"
                           Height="1"
                           StrokeThickness="1"
                           Margin="3, 0, 0, 0"/>
                <TextBlock Grid.Column="2"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Type}"
                           FontWeight="Bold"
                           Margin="3, 0, 0, 0"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <!--<ScrollViewer x:Name="xScrollViewer"
                      ScrollChanged="xScrollViewer_ScrollChanged"
                      PreviewMouseWheel="xScrollViewer_PreviewMouseWheel">-->
            <!--<TreeView x:Name="xTreeView"
                      ItemsSource="{Binding Root.Groups, Mode=TwoWay}"
                      ItemContainerStyle="{StaticResource sTreeViewItem}"
                      SelectedItemChanged="TreeView_SelectedItemChanged"
                      MouseLeftButtonUp="TreeView_MouseLeftButtonUp"/>-->

        <TreeView x:Name="xTreeView"
                  ItemContainerStyle="{StaticResource sTreeViewItem}"
                  AllowDrop="True"
                  ScrollViewer.ScrollChanged="xScrollViewer_ScrollChanged"
                  SelectedItemChanged="TreeView_SelectedItemChanged"
                  MouseDoubleClick="xTreeView_MouseDoubleClick"
                  MouseRightButtonUp="TreeView_MouseRightButtonUp"
                  PreviewMouseLeftButtonDown="xTreeView_PreviewMouseLeftButtonDown"
                  PreviewMouseMove="xTreeView_PreviewMouseMove"
                  Drop="xTreeView_Drop">
            <TreeView.ContextMenu>
                <ContextMenu x:Name="xTreeViewContextMenu"
                             Opened="xTreeViewContextMenu_Opened">
                    <MenuItem x:Name="xSaveMenu"
                              Header="Save"
                              Click="xSaveMenu_Click"/>
                    <Separator/>
                    <MenuItem x:Name="xCopyMenu"
                              Header="Copy"
                              Click="xCopyMenu_Click"/>
                    <MenuItem x:Name="xPasteMenu"
                              Header="Paste"
                              Click="xPasteMenu_Click"/>
                    <MenuItem x:Name="xDeleteMenu"
                              Header="Delete"
                              Click="xDeleteMenu_Click"/>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
        <!--</ScrollViewer>-->
    </Grid>
</UserControl>
